#! /bin/bash

set -eo pipefail

# Script for creating a testing virtual machine on Azure
# with azurecli on a distrobox container.

# General config, you will probably do not need to change
# this but if you do, do it with enviroment variables

# export FAZ_AZURE_LOCATION="eastus"
if [[ -z "${FAZ_AZURE_LOCATION}" ]]; then
    AZURE_LOCATION="eastus2"
else
    AZURE_LOCATION="${FAZ_AZURE_LOCATION}"
fi

# export FAZ_VM_USER="azureuser"
if [[ -z "${FAZ_VM_USER}" ]]; then
    AZURE_VM_USER="azureuser"
else
    AZURE_VM_USER="${FAZ_VM_USER}"
fi

# export FAZ_SSHKEY="~/.ssh/id_rsa"
if [[ -z "${FAZ_SSHKEY}" ]]; then
    AZURE_VM_SSHKEY_PATH="~/.ssh/id_rsa.pub"
else
    AZURE_VM_SSHKEY_PATH="${FAZ_SSHKEY}"
fi

vmData(){
    while true; do
    	read -r -p "What size of vm you want? B1s or B2s [1/2]: " cSize
        case $cSize in
            "1") AZURE_SIZE="Standard_B1s" ; break ;;  
            "2") AZURE_SIZE="Standard_B2s" ; break ;;
            *) echo "Choose a valid option [1/2]"
        esac
    done
    read -r -p "Name of the ResourceGroup (alphanumeric, max 20 char): " USER_AZURE_RESOURCEGROUP
    AZURE_RESOURCEGROUP=$(echo "$USER_AZURE_RESOURCEGROUP" | sed 's/[^[:alnum:].]//g'  | head -c 20)
}

if [ -z "$1" ]; then
    echo "
Script for quick creation and destruction of virtual machines on azure cloud service.

For VM creation.
    $(basename "$0") create alma # For almalinux
    $(basename "$0") create debian # For debian

For VM and resource destruction.
    $(basename "$0") delete
    "
exit 1
fi

if [ "$1" == "delete" ]; then
        echo "
Active resource-groups are:
    $(az group list --output tsv | awk '{print $4}' | sed 's/ //g')
        "
        read -r -p "ResourceGroup to Delete: " AZURE_RESOURCEGROUP
        echo "Deleting ${AZURE_RESOURCEGROUP} resource group."
        az group delete --name ${AZURE_RESOURCEGROUP}
        
        echo "Deleting NetworkWatcherRG"
        az group delete --name NetworkWatcherRG
        
        echo "Active resource-groups are:"
        az group list --output tsv | awk '{print $4}'
        exit 0 
fi

if [ "$1" == "create" ]; then
    case $2 in
    "alma")
	echo "Creating AlmaLinux Virtual Machine"
        AZURE_IMAGE="almalinux:almalinux:8-gen2:latest"
        vmData
	;;
    "debian")
	echo "Creating Debian Virtual Machine"
        AZURE_IMAGE="Debian:debian-11-daily:11-gen2:latest"
        vmData
        ;;
    *)
	echo "Not type detected ... creating AlmaLinux 8 VPS"
        AZURE_IMAGE="almalinux:almalinux:8-gen2:latest"
        vmData
        ;;
    esac

    AZURE_VM="${AZURE_RESOURCEGROUP}-VM"

    az group create \
        --name ${AZURE_RESOURCEGROUP} \
        --location ${AZURE_LOCATION}

    az vm create \
        --resource-group ${AZURE_RESOURCEGROUP} \
        --name ${AZURE_VM} \
        --image ${AZURE_IMAGE} \
        --public-ip-sku Standard \
        --admin-username ${AZURE_VM_USER} \
        --size ${AZURE_SIZE} \
        --authentication-type ssh \
        --ssh-key-values ${AZURE_VM_SSHKEY_PATH}

    PUBLIC_IP_IPV4=$(az vm show -d \
        --resource-group ${AZURE_RESOURCEGROUP} \
        --name ${AZURE_VM} \
        --query publicIps \
        --output tsv)

    echo "
VM Ready
    SSH:
        ssh ${AZURE_VM_USER}@${PUBLIC_IP_IPV4}
    "
    exit 0
fi

#! /usr/bin/env bash

set -e

# MIT License

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

VAR0=$(basename "$0")
VAR1=$1
VAR2=$2

# This uses 0x0 and a sharing files alternative https://github.com/beleon/buckets
# You can use only 0x0 modifying this script

# Configure this variable with your selfhosted buckets url :)
#BUCKET_URL=https://Your.Selfhosted.BUCKET_URL.com
# or 
source ~/.config/user_var

# If this is running non interactively
if ! tty -s; then
	if [ "$VAR1" = "-e" ]; then
		URL=$(gpg -ac -o- | curl --fail -X POST --data-binary @- "${BUCKET_URL}")
	else
		URL=$(curl --fail -X POST --data-binary @- "${BUCKET_URL}")
	fi	
	echo "The url is $URL , it is on clipboard" 
	echo "$URL"| xclip -selection c
	exit 0
fi

# If VAR1 is empty, --help, -h or -?, echo short help text and exit
if [ -z "$VAR1" ] || [ "$VAR1" = "--help" ] || [ "$VAR1" = "-help" ] || [ "$VAR1" = "-h" ] || [ "$VAR1" = "-?" ]; then
	echo "To upload files from your computer:"
	echo
	echo "	Format: '$VAR0 [option] [directory/]filename'."
	echo 
	echo "To encrypt uploaded file:"
	echo 
	echo "	Format: '$VAR0 -e filename'."
	echo 
	echo "To delete previously uploaded file:"
	echo 
	echo "	Format: '$VAR0 -d filename'."
	echo 
	echo "To force 0x0.st:"
	echo 
	echo "	Format: '$VAR0 -0 filename'."
	echo
	echo "To shorten long URLs:"
	echo
	echo "	Format: '$VAR0 -short https://example.com/directory'."
	echo
	echo "To upload remote files:"
	echo
	echo "	Format: '$VAR0 -remote https://example.com/directory/file.png'."
	exit 1
fi

# URL shortener
if [ "$VAR1" = "-short" ]; then
	URL=$(curl --fail -F shorten="$VAR2" -- https://0x0.st/) ; EXIT=$?
	if [ "$URL" != "Segmentation fault" ]; then
		echo
		echo "The short URL for '$VAR2' is '$URL'!"
	else
		echo
		echo "***'$VAR2' is not a valid URL"
		if [ -z "$VAR2" ]; then
			echo
			echo "See '$VAR0 --help' for more info."
		fi
	fi
	exit 1
fi

# Upload remote file to 0x0.st
if [ "$VAR1" = "-remote" ]; then
	URL=$(curl --fail -F url="$VAR2" -- https://0x0.st/) ; EXIT=$?
	if ! [ "${URL:0:1}" = "<" ] && ! [ "${URL:0:1}" = "4" ]; then
		echo
		echo "File '$VAR2' is uploaded as '$URL'"
	else
		echo
		echo "*** There is no file at '$VAR2'"
		if [ -z "$VAR2" ]; then
			echo
			echo "See '$VAR0 --help' for more info."
		fi
	fi
	exit 1
fi

# Exit if no valid filename is given either in $VAR1 or $VAR2
if ! [ -f "$VAR1" ] && ! [ -f "$VAR2" ]; then
	if [ -z "$VAR2" ]; then
		echo "Didn't find the file '$VAR1'"
	else
		echo "Didn't find the file '$VAR2'"
	fi
	exit 1
fi

# If file to transfer is in first option then move it to VAR2
if [ -f "$VAR1" ]; then
	VAR2=$VAR1
fi

# If option declared
case $VAR1 in
	"-e")
		URL=$(cat $VAR2 | gpg -ac -o- | curl --fail -X POST --data-binary @- "${BUCKET_URL}${VAR2}.gpg") ; EXIT=$?
		;;
	"-d")
		curl -X DELETE "${BUCKET_URL}${VAR2}"
		echo "Done deleting ${VAR2}"
		exit 0
		;;
	"-0")
		URL=$(curl --fail -F file=@"$VAR2" -- https://0x0.st/) ; EXIT=$?
		;;
	"-0e"|"-e0")
		URL=$(cat $VAR2 | gpg -ac -o- | curl --fail -F file=@- -- https://0x0.st/) ; EXIT=$?
		;;
	*)
		URL=$(curl --fail -X POST --data-binary "@$VAR2" "${BUCKET_URL}${VAR2}") ; EXIT=$?
esac

# Transfer file using curl and copy URL returned to clipboard
if [[ $EXIT -eq 0 ]]; then
	echo
	echo "Uploading of '$VAR2' is done. The URL is '$URL'"
	echo "$URL" | xclip -selection c
else
        echo
        echo "*** Script ended with error code $EXIT"

fi

#! /usr/bin/env bash

set -e

# This script works for encrypting files or directories using gpg and tar or to create a encrypted volume that looks like a simple file using luks.
# Put this script in /usr/local/bin directory or other place in PATH.

###--------------------------------Variables--------------------------------

VAR0=$(basename "$0")
VAR1=$1
filename=$2
SIZE=$3
user_id=$(id -u)

###--------------------------------Functions--------------------------------

function exist () {
	if [ -z "$filename" ]; then
    	echo "You are mising the file name."
    	exit 1
	fi
	if  ! [ -f $filename ] && ! [ -d $filename ]; then
    	echo 
		echo "The file $filename doesn't exist."
    	exit 1
	fi
	}

###--------------------------------Script--------------------------------

if [ -z "$VAR1" ]; then
    echo "Use '$VAR0 --help' for more info."
    exit 1
fi
# If VAR1 is --help, -h or -?, echo short help text and exit
if [ "$VAR1" = "--help" ] || [ "$VAR1" = "-help" ] || [ "$VAR1" = "-h" ] || [ "$VAR1" = "-?" ]; then
    echo "This script works for encrypting files or directories using gpg or to create a encrypted volume that looks like a simple file using luks.  "
	echo "*** For using cryptsetup you need to be able to use sudo."
    echo 
    echo "To encrypt a file with gpg"
    echo "	Format: '$VAR0 -eF filename.ext'"
    echo
    echo "To decrypt a file with gpg"
    echo "	Format: '$VAR0 -dF filename.ext'"
    echo
    echo "To encrypt a directorie with tar and gpg"
    echo "	Format: '$VAR0 -eD directorie'"
    echo
    echo "To decrypt a directorie with tar and gpg"
    echo "	Format: '$VAR0 -dD directorie'"
    echo
    echo "To create an encrypted volume (size in MB)"
    echo "	Format: '$VAR0 -crV volume_name size'"
    echo
    echo "To open an encrypted volume"
    echo "	Format: '$VAR0 -oV volume_name'"
    echo
    echo "To close an encrypted volume"
    echo "	Format: '$VAR0 -cV volume_name'"
    exit 1
fi

case $VAR1 in
	"-eF"|"eF")
		# To encrypt a file with gpg
		exist
		gpg --symmetric $filename
		EXIT=$?
		;;
 	"-dF"|"dF")
	 	# To decrypt a file with gpg
		exist
		namegpg=${filename%.gpg}
		gpg --output $namegpg --decrypt $filename
		EXIT=$?
		;;
	"-eD"|"eD")
		# To encrypt a directorie with tar and gpg
		exist
		tar -cJf $filename.tar.xz $filename
		gpg --symmetric $filename.tar.xz
		rm $filename.tar.xz
		EXIT=$?
		;;
	"-dD"|"dD")
		# To decrypt a directorie with tar and gpg
		exist
		namegpg=${filename%.gpg}
		gpg --output $namegpg --decrypt $filename
		tar xJf $namegpg
		rm $namegpg
		EXIT=$?
		;;
	"-crV"|"crV")
		# To create an encrypted volume (size in MB)
		if [ -z "$filename" ]; then
    		echo "You are mising the file name."
    		exit 1
		fi
		if [ -z "$SIZE" ]; then
    		echo "You are mising the size of the file."
    		exit 1
		fi
		dd if=/dev/zero of=$PWD/$filename bs=1M count=$SIZE
		sudo cryptsetup -v --key-size 512 --hash sha256 --iter-time 5000 --use-random luksFormat --type luks2 $filename
		sudo cryptsetup open --type luks2 $filename $filename
		sudo mkfs -t ext4 /dev/mapper/$filename
		sudo cryptsetup close $filename
		EXIT=$?
		;;
	"-oV"|"oV")
		# To open an encrypted volume
		exist
		sudo cryptsetup open --type luks2 $filename $filename
		mkdir luks-$filename
		sudo mount /dev/mapper/$filename luks-$filename
		sudo chown -R $user_id luks-$filename
		EXIT=$?
		;;
	"-cV"|"cV")
		# To close an encrypted volume
		exist
		sudo umount luks-$filename
		sudo cryptsetup close $filename
		rm -r luks-$filename
		EXIT=$?
		;;
	*)
		echo " Unsupported option '$VAR1'" ; EXIT=$?
esac

if [ $EXIT -ne 0 ]; then
    echo
    echo " Script ended with error code $EXIT!"
fi
